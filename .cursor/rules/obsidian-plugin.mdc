---
description: Obsidian plugin architecture and integration for Obsidian Magic
globs: **/obsidian-plugin/**/*.ts
alwaysApply: false
---

# Obsidian Plugin

## Core Plugin Architecture

The Obsidian plugin implements a modern, maintainable architecture:

1. **Plugin Core**: Main plugin class implementing Obsidian's plugin API
2. **UI Components**: Custom views, modals, and settings panels
3. **Tag Management**: Integration with Obsidian's tagging system
4. **Document Processing**: Analysis and modification of Markdown content

## Seamless Obsidian Integration

The plugin integrates deeply with Obsidian's systems:

1. **Frontmatter Management**: Reading and writing YAML frontmatter for tag storage
2. **Metadata Management**: Working with Obsidian's metadata system
3. **File System Access**: Safe handling of vault files and paths
4. **User Interface Integration**: Custom ribbon icons, context menus, and commands

## Document Integration

The plugin provides comprehensive document integration features:

1. **CodeMirror Extension**: Custom syntax highlighting and visual indicators for tags
2. **Autocomplete Provider**: Context-aware tag suggestions and hierarchical completion
3. **Tag Validation**: Real-time validation against taxonomy with suggested fixes
4. **Visual Tag Chips**: Interactive tag display with drag-and-drop and filtering
5. **Tag Relationship Visualization**: Force-directed graph showing tag connections

## Advanced Features

The plugin implements sophisticated features for conversation management:

1. **Inline Tag Editing**: Direct modification of tags with contextual information
2. **Taxonomy Browser**: Explore and select from the full tag taxonomy
3. **Tag Visualization**: Visual representations of tag relationships
4. **Batch Operations**: Process multiple files with unified settings
5. **Synchronization**: Coordination with CLI-applied tags

## Security & Configuration

The plugin provides robust security and configuration options:

1. **API Key Management**: Secure storage with multiple options (encrypted, keychain, env vars)
2. **Permissions Model**: Granular permission controls for API access and file modifications
3. **Privacy Controls**: Data minimization and local processing options
4. **Cost Management**: Budget controls and usage tracking
5. **Enterprise Features**: Team management, audit logs, and centralized configuration
6. **Error Handling**: Leverages the unified error system from the core package for robust error handling and recovery

## Ecosystem Integration

The plugin integrates with the broader Obsidian ecosystem:

1. **Core Integration**: Enhances search, graph view, and command palette
2. **Plugin Compatibility**: Special integrations with popular plugins (Dataview, Calendar, etc.)
3. **Custom CSS Support**: Theme-aware styling with accessibility focus
4. **Multi-device Experience**: Mobile-optimized interfaces with synchronization
5. **External Tool Integration**: Bidirectional sync with VS Code and CLI tools

## Implementation Details

The plugin uses modern TypeScript and Obsidian API practices:

1. **CodeMirror 6 Integration**: Leveraging Obsidian's editor extensions
2. **Event-driven Architecture**: Proper event handling and cleanup
3. **Component Lifecycle Management**: Structured onload/onunload flows
4. **Accessibility-first Design**: WCAG compliance with keyboard navigation
5. **Performance Optimization**: Efficient rendering for large documents
6. **Unified Error Handling**: Using the core package's Result pattern and error classes for consistent error management

## Documentation Links

- [Plugin Overview](mdc:documentation/obsidian-plugin/plugin-overview.md)
- [Tag Management](mdc:documentation/obsidian-plugin/tag-management.md)
- [Document Integration](mdc:documentation/obsidian-plugin/document-integration.md)
- [Security & Configuration](mdc:documentation/obsidian-plugin/security-configuration.md)
- [Ecosystem Integration](mdc:documentation/obsidian-plugin/ecosystem-integration.md)